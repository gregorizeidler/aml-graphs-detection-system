services:
  # Neo4j Database
  neo4j:
    image: neo4j:5.13-community
    container_name: aml-neo4j
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      - NEO4J_AUTH=neo4j/aml_password_123
      - NEO4J_dbms_memory_heap_max__size=512M
      - NEO4J_dbms_memory_pagecache_size=512M
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
    networks:
      - aml-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: aml-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=aml_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=aml_password_123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - aml-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aml-api
    ports:
      - "8001:8000"
    environment:
      - ENV=development
      - DEBUG=True
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=aml_password_123
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=aml_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=aml_password_123
      - CORS_ORIGINS=http://localhost:3000,http://localhost:8000
    volumes:
      - ./app:/app/app
      - ./scripts:/app/scripts
      - ./data:/app/data
    depends_on:
      neo4j:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - aml-network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend React (ser√° implementado)
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: aml-frontend
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - REACT_APP_API_URL=http://localhost:8000
  #   depends_on:
  #     - api
  #   networks:
  #     - aml-network

networks:
  aml-network:
    driver: bridge

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  postgres_data:

